[{"D:\\JavaScript\\multiplayer_games\\frontend\\src\\index.js":"1","D:\\JavaScript\\multiplayer_games\\frontend\\src\\reportWebVitals.js":"2","D:\\JavaScript\\multiplayer_games\\frontend\\src\\App.js":"3","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\CheckersScreen.js":"4","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Cell.js":"5","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\Piece.js":"6","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\checkersLogic.js":"7","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\Chessscreen.js":"8","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Pawn.js":"9","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Knight.js":"10","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Rook.js":"11","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Bishop.js":"12","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\King.js":"13","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Queen.js":"14","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessPiece.js":"15","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessGame.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":357,"mtime":1607771684524,"results":"20","hashOfConfig":"18"},{"size":3464,"mtime":1607610945047,"results":"21","hashOfConfig":"18"},{"size":781,"mtime":1607772858268,"results":"22","hashOfConfig":"18"},{"size":3779,"mtime":1607265553396,"results":"23","hashOfConfig":"18"},{"size":2618,"mtime":1607610930021,"results":"24","hashOfConfig":"18"},{"size":2523,"mtime":1607772380332,"results":"25","hashOfConfig":"18"},{"size":850,"mtime":1607772030143,"results":"26","hashOfConfig":"18"},{"size":1649,"mtime":1607773927271,"results":"27","hashOfConfig":"18"},{"size":1921,"mtime":1607772045052,"results":"28","hashOfConfig":"18"},{"size":2228,"mtime":1607771969798,"results":"29","hashOfConfig":"18"},{"size":3883,"mtime":1607773890568,"results":"30","hashOfConfig":"18"},{"size":646,"mtime":1607771139812,"results":"31","hashOfConfig":"18"},{"size":846,"mtime":1607757756433,"results":"32","hashOfConfig":"18"},{"size":1522,"mtime":1607772514173,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ksfgo1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\JavaScript\\multiplayer_games\\frontend\\src\\index.js",[],["69","70"],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\reportWebVitals.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\App.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\CheckersScreen.js",["71"],"import React, { useState, useEffect } from \"react\";\r\nimport Cell from \"../components/Cell\";\r\n\r\nimport CheckersPiece from \"../classes/checkers/Piece\";\r\nimport move_piece from \"../classes/checkers/checkersLogic\";\r\n\r\nconst CheckersScreen = ({ updateCellsClicked, cellsClicked }) => {\r\n\tconst [board, setBoard] = useState([\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0]\r\n\t]);\r\n\r\n\tlet numClick = 0;\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tempBoard = board.map(r => r);\r\n\r\n\t\tfor (let row = 0; row < tempBoard.length; row++) {\r\n\t\t\tfor (let col = 0; col < tempBoard.length; col++) {\r\n\t\t\t\tif (row < 2) {\r\n\t\t\t\t\tif (row === 0 && col % 2 === 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"W\", [row, col]);\r\n\t\t\t\t\t} else if (row === 1 && col % 2 !== 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"W\", [row, col]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (row > 5) {\r\n\t\t\t\t\tif (row === 6 && col % 2 === 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"R\", [row, col]);\r\n\t\t\t\t\t} else if (row === 7 && col % 2 !== 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"R\", [row, col]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetBoard(tempBoard);\r\n\t\tconsole.log(board);\r\n\t}, []);\r\n\r\n\tconst showMoves = (row, col) => {\r\n\t\tlet allMoves;\r\n\r\n\t\tlet tempBoard = board.map(r => r);\r\n\r\n\t\tfor (let row = 0; row < tempBoard.length; row++) {\r\n\t\t\tfor (let col = 0; col < tempBoard.length; col++) {\r\n\t\t\t\tif (tempBoard[row][col] === \"dot\") {\r\n\t\t\t\t\ttempBoard[row][col] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (tempBoard[row][col] !== 0 && numClick === 0) {\r\n\t\t\tallMoves = tempBoard[row][col].get_valid_moves(tempBoard);\r\n\t\t\tfor (let i = 0; i < allMoves.length; i++) {\r\n\t\t\t\ttempBoard[allMoves[i][0]][allMoves[i][1]] = \"dot\";\r\n\t\t\t}\r\n\t\t\tnumClick++;\r\n\t\t}\r\n\r\n\t\tsetBoard(tempBoard);\r\n\r\n\t\tupdateCellsClicked(row, col);\r\n\r\n\t\tif (numClick === 2) {\r\n\t\t\t// call the move function\r\n\t\t\ttempBoard = board.map(r => r);\r\n\t\t\tlet movedBoard = move_piece(tempBoard, cellsClicked); //cells cellsClicked)\r\n\t\t\tsetBoard(movedBoard);\r\n\t\t\tnumClick = 0;\r\n\t\t\tupdateCellsClicked(null, null, true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tminHeight: \"100vh\",\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t\tminWidth: \"100vw\",\r\n\t\t\t\tpaddingRight: \"2rem\"\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t{board.map((row, ri) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div style={{ margin: 0, padding: 0, display: \"flex\" }} key={`row${ri}`}>\r\n\t\t\t\t\t\t\t{row.map((col, ci) => {\r\n\t\t\t\t\t\t\t\tlet color = (ri + ci) % 2 === 0 ? \"black\" : \"red\";\r\n\r\n\t\t\t\t\t\t\t\tlet image = null;\r\n\t\t\t\t\t\t\t\tlet piece = board[ri][ci];\r\n\t\t\t\t\t\t\t\tlet blueDot;\r\n\r\n\t\t\t\t\t\t\t\tif (piece !== 0) {\r\n\t\t\t\t\t\t\t\t\tif (piece.color === \"W\") {\r\n\t\t\t\t\t\t\t\t\t\tif (piece.isKing) image = \"images/WhiteKing.png\";\r\n\t\t\t\t\t\t\t\t\t\telse image = \"images/WhitePiece.png\";\r\n\t\t\t\t\t\t\t\t\t} else if (piece === \"dot\") {\r\n\t\t\t\t\t\t\t\t\t\tblueDot = true;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (piece.isKing) image = \"images/RedKing.png\";\r\n\t\t\t\t\t\t\t\t\t\telse image = \"images/RedPiece.png\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\t\t\t\tblueDot={blueDot}\r\n\t\t\t\t\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\t\t\t\t\trow={ri}\r\n\t\t\t\t\t\t\t\t\t\tcol={ci}\r\n\t\t\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\t\t\tkey={`row${ri}-col${ci}`}\r\n\t\t\t\t\t\t\t\t\t\timage={image}\r\n\t\t\t\t\t\t\t\t\t\tshowMoves={showMoves}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CheckersScreen;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Cell.js",["72"],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\Piece.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\checkersLogic.js",["73","74","75","76","77","78"],"import CheckersPiece from \"./Piece\";\r\n\r\nconst get_all_valid_moves = (board, color) => {\r\n\tlet all_moves_for_a_color = {};\r\n\r\n\tfor (let i = 0; i < board.length; i++) {\r\n\t\tfor (let j = 0; j < board.length; j++) {\r\n\t\t\tif (board[i][j] !== 0 && board[i][j].color === color) {\r\n\t\t\t\tall_moves_for_a_color[`(${i},${j})`] = board[i][j].get_valid_moves();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst move_piece = (board, cells_clicked) => {\r\n\t// row[0], col[0] is the initial position\r\n\t// row[1], col[1] is the final position\r\n\r\n\tconst rowi = cells_clicked[\"rows\"][0];\r\n\tconst rowf = cells_clicked[\"rows\"][1];\r\n\tconst coli = cells_clicked[\"cols\"][0];\r\n\tconst colf = cells_clicked[\"cols\"][1];\r\n\r\n\tlet did_piece_move = false;\r\n\tlet was_piece_captured = false;\r\n\tlet was_promoted_to_king = false;\r\n\tlet piece_captured_row, piece_captured_col;\r\n\tconst clicked_piece = board[rowi][coli];\r\n\r\n\t// # all_moves is now a dictionary\r\n\tconsole.log(clicked_piece);\r\n\tconst all_moves = get_all_valid_moves(board, clicked_piece.color);\r\n\r\n\t// # not a capturing move\r\n\tif (rowi - 1 <= rowf <= rowi + 1) {\r\n\t\tlet temp = board[rowi][coli];\r\n\t\tboard[rowi][coli] = board[rowf][colf];\r\n\t\tboard[rowf][colf] = temp;\r\n\r\n\t\tboard[rowf][colf].current_row = rowf;\r\n\t\tboard[rowf][colf].current_col = colf;\r\n\t\tdid_piece_move = true;\r\n\t} else if (rowi - 2 <= rowf <= rowi + 2) {\r\n\t\tlet temp = board[rowi][coli];\r\n\t\tboard[rowi][coli] = board[rowf][colf];\r\n\t\tboard[rowf][colf] = temp;\r\n\t\tboard[rowf][colf].current_row = rowf;\r\n\t\tboard[rowf][colf].current_col = colf;\r\n\r\n\t\tif (rowf < rowi) {\r\n\t\t\tpiece_captured_row = rowi - 1;\r\n\t\t\tpiece_captured_col = colf < coli ? coli - 1 : coli + 1;\r\n\t\t} else {\r\n\t\t\tpiece_captured_row = rowi + 1;\r\n\t\t\tpiece_captured_col = colf < coli ? coli - 1 : coli + 1;\r\n\t\t}\r\n\r\n\t\t// was_piece_captured, which piece was captured (red or black)\r\n\t\twas_piece_captured = [true, board[piece_captured_row][piece_captured_col]];\r\n\r\n\t\tif (board[piece_captured_row][piece_captured_col].isKing) {\r\n\t\t\tboard[rowf][colf].isKing = true;\r\n\t\t}\r\n\r\n\t\tboard[piece_captured_row][piece_captured_col] = 0;\r\n\t\tdid_piece_move = true;\r\n\t}\r\n\tif (did_piece_move) {\r\n\t\tif (board[rowf][colf].row < 2 && rowf == 7 && !board[rowf][colf].isKing) {\r\n\t\t\tboard[rowf][colf].isKing = true;\r\n\t\t\twas_promoted_to_king = [true, board[rowf][colf]];\r\n\t\t}\r\n\r\n\t\tif (board[rowf][colf].row > 2 && rowf == 0 && !board[rowf][colf].isKing) {\r\n\t\t\tboard[rowf][colf].isKing = true;\r\n\t\t\twas_promoted_to_king = [true, board[rowf][colf]];\r\n\t\t}\r\n\t}\r\n\r\n\t// return did_piece_move, clicked_piece, was_piece_captured, was_promoted_to_king;\r\n\tconsole.log(board);\r\n\treturn board;\r\n};\r\n\r\nexport default move_piece;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\Chessscreen.js",["79"],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Pawn.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Knight.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Rook.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Bishop.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\King.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Queen.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessPiece.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessGame.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":46,"column":5,"nodeType":"86","endLine":46,"endColumn":7,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":33,"column":14,"nodeType":"90","endLine":33,"endColumn":60},{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":21},{"ruleId":"91","severity":1,"message":"95","line":32,"column":8,"nodeType":"93","messageId":"94","endLine":32,"endColumn":17},{"ruleId":"91","severity":1,"message":"96","line":59,"column":3,"nodeType":"93","messageId":"94","endLine":59,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":69,"column":41,"nodeType":"99","messageId":"100","endLine":69,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":74,"column":41,"nodeType":"99","messageId":"100","endLine":74,"endColumn":43},{"ruleId":"91","severity":1,"message":"101","line":76,"column":4,"nodeType":"93","messageId":"94","endLine":76,"endColumn":24},{"ruleId":"91","severity":1,"message":"102","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'board'. Either include it or remove the dependency array.","ArrayExpression",["105"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'CheckersPiece' is defined but never used.","Identifier","unusedVar","'all_moves' is assigned a value but never used.","'was_piece_captured' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'was_promoted_to_king' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [board]",{"range":"108","text":"109"},[1321,1323],"[board]"]