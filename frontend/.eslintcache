[{"D:\\JavaScript\\multiplayer_games\\frontend\\src\\index.js":"1","D:\\JavaScript\\multiplayer_games\\frontend\\src\\reportWebVitals.js":"2","D:\\JavaScript\\multiplayer_games\\frontend\\src\\App.js":"3","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\CheckersScreen.js":"4","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Cell.js":"5","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\Piece.js":"6","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\checkersLogic.js":"7","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Pawn.js":"8","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Knight.js":"9","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Rook.js":"10","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Bishop.js":"11","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\King.js":"12","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Queen.js":"13","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessPiece.js":"14","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessGame.js":"15","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\ChessBoard.js":"16","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\ChessScreen.js":"17","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Chat.js":"18","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\HomeScreen.js":"19","D:\\JavaScript\\multiplayer_games\\frontend\\src\\store.js":"20","D:\\JavaScript\\multiplayer_games\\frontend\\src\\reducers\\userReducers.js":"21","D:\\JavaScript\\multiplayer_games\\frontend\\src\\reducers\\socketReducers.js":"22","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\GamesScreen.js":"23","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\SketchIOScreen.js":"24","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Canvas.js":"25","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\sketch\\SketchIO.js":"26","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\InvitePlayersScreen.js":"27","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\DisplayRoomId.js":"28","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\DisplayPlayersInRoom.js":"29","D:\\JavaScript\\multiplayer_games\\frontend\\src\\hooks\\useWindowSize.js":"30"},{"size":650,"mtime":1608879827948,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":933,"mtime":1609224407151,"results":"34","hashOfConfig":"32"},{"size":3464,"mtime":1607610945047,"results":"35","hashOfConfig":"32"},{"size":1447,"mtime":1608978286914,"results":"36","hashOfConfig":"32"},{"size":3779,"mtime":1607265553396,"results":"37","hashOfConfig":"32"},{"size":2828,"mtime":1607774322198,"results":"38","hashOfConfig":"32"},{"size":1501,"mtime":1608963540385,"results":"39","hashOfConfig":"32"},{"size":1475,"mtime":1608963613792,"results":"40","hashOfConfig":"32"},{"size":1766,"mtime":1608963555384,"results":"41","hashOfConfig":"32"},{"size":2763,"mtime":1608978409082,"results":"42","hashOfConfig":"32"},{"size":3152,"mtime":1608963522721,"results":"43","hashOfConfig":"32"},{"size":823,"mtime":1607783336414,"results":"44","hashOfConfig":"32"},{"size":1031,"mtime":1608963386382,"results":"45","hashOfConfig":"32"},{"size":5832,"mtime":1608970067661,"results":"46","hashOfConfig":"32"},{"size":3720,"mtime":1608982372318,"results":"47","hashOfConfig":"32"},{"size":1090,"mtime":1608981863674,"results":"48","hashOfConfig":"32"},{"size":2559,"mtime":1608982281758,"results":"49","hashOfConfig":"32"},{"size":1542,"mtime":1609240530379,"results":"50","hashOfConfig":"32"},{"size":794,"mtime":1609163618294,"results":"51","hashOfConfig":"32"},{"size":478,"mtime":1608979249092,"results":"52","hashOfConfig":"32"},{"size":618,"mtime":1609165642610,"results":"53","hashOfConfig":"32"},{"size":614,"mtime":1609221834603,"results":"54","hashOfConfig":"32"},{"size":441,"mtime":1609239364993,"results":"55","hashOfConfig":"32"},{"size":4958,"mtime":1609240382241,"results":"56","hashOfConfig":"32"},{"size":2534,"mtime":1609047855366,"results":"57","hashOfConfig":"32"},{"size":1649,"mtime":1609239042935,"results":"58","hashOfConfig":"32"},{"size":610,"mtime":1609224486060,"results":"59","hashOfConfig":"32"},{"size":260,"mtime":1609237751894,"results":"60","hashOfConfig":"32"},{"size":496,"mtime":1609240008565,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"ksfgo1",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\JavaScript\\multiplayer_games\\frontend\\src\\index.js",[],["131","132"],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\reportWebVitals.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\App.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\CheckersScreen.js",["133"],"import React, { useState, useEffect } from \"react\";\r\nimport Cell from \"../components/Cell\";\r\n\r\nimport CheckersPiece from \"../classes/checkers/Piece\";\r\nimport move_piece from \"../classes/checkers/checkersLogic\";\r\n\r\nconst CheckersScreen = ({ updateCellsClicked, cellsClicked }) => {\r\n\tconst [board, setBoard] = useState([\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0]\r\n\t]);\r\n\r\n\tlet numClick = 0;\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tempBoard = board.map(r => r);\r\n\r\n\t\tfor (let row = 0; row < tempBoard.length; row++) {\r\n\t\t\tfor (let col = 0; col < tempBoard.length; col++) {\r\n\t\t\t\tif (row < 2) {\r\n\t\t\t\t\tif (row === 0 && col % 2 === 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"W\", [row, col]);\r\n\t\t\t\t\t} else if (row === 1 && col % 2 !== 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"W\", [row, col]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (row > 5) {\r\n\t\t\t\t\tif (row === 6 && col % 2 === 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"R\", [row, col]);\r\n\t\t\t\t\t} else if (row === 7 && col % 2 !== 0) {\r\n\t\t\t\t\t\ttempBoard[row][col] = new CheckersPiece(\"R\", [row, col]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetBoard(tempBoard);\r\n\t\tconsole.log(board);\r\n\t}, []);\r\n\r\n\tconst showMoves = (row, col) => {\r\n\t\tlet allMoves;\r\n\r\n\t\tlet tempBoard = board.map(r => r);\r\n\r\n\t\tfor (let row = 0; row < tempBoard.length; row++) {\r\n\t\t\tfor (let col = 0; col < tempBoard.length; col++) {\r\n\t\t\t\tif (tempBoard[row][col] === \"dot\") {\r\n\t\t\t\t\ttempBoard[row][col] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (tempBoard[row][col] !== 0 && numClick === 0) {\r\n\t\t\tallMoves = tempBoard[row][col].get_valid_moves(tempBoard);\r\n\t\t\tfor (let i = 0; i < allMoves.length; i++) {\r\n\t\t\t\ttempBoard[allMoves[i][0]][allMoves[i][1]] = \"dot\";\r\n\t\t\t}\r\n\t\t\tnumClick++;\r\n\t\t}\r\n\r\n\t\tsetBoard(tempBoard);\r\n\r\n\t\tupdateCellsClicked(row, col);\r\n\r\n\t\tif (numClick === 2) {\r\n\t\t\t// call the move function\r\n\t\t\ttempBoard = board.map(r => r);\r\n\t\t\tlet movedBoard = move_piece(tempBoard, cellsClicked); //cells cellsClicked)\r\n\t\t\tsetBoard(movedBoard);\r\n\t\t\tnumClick = 0;\r\n\t\t\tupdateCellsClicked(null, null, true);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tminHeight: \"100vh\",\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t\tminWidth: \"100vw\",\r\n\t\t\t\tpaddingRight: \"2rem\"\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t{board.map((row, ri) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div style={{ margin: 0, padding: 0, display: \"flex\" }} key={`row${ri}`}>\r\n\t\t\t\t\t\t\t{row.map((col, ci) => {\r\n\t\t\t\t\t\t\t\tlet color = (ri + ci) % 2 === 0 ? \"black\" : \"red\";\r\n\r\n\t\t\t\t\t\t\t\tlet image = null;\r\n\t\t\t\t\t\t\t\tlet piece = board[ri][ci];\r\n\t\t\t\t\t\t\t\tlet blueDot;\r\n\r\n\t\t\t\t\t\t\t\tif (piece !== 0) {\r\n\t\t\t\t\t\t\t\t\tif (piece.color === \"W\") {\r\n\t\t\t\t\t\t\t\t\t\tif (piece.isKing) image = \"images/WhiteKing.png\";\r\n\t\t\t\t\t\t\t\t\t\telse image = \"images/WhitePiece.png\";\r\n\t\t\t\t\t\t\t\t\t} else if (piece === \"dot\") {\r\n\t\t\t\t\t\t\t\t\t\tblueDot = true;\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tif (piece.isKing) image = \"images/RedKing.png\";\r\n\t\t\t\t\t\t\t\t\t\telse image = \"images/RedPiece.png\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\t\t\t\tblueDot={blueDot}\r\n\t\t\t\t\t\t\t\t\t\tboard={board}\r\n\t\t\t\t\t\t\t\t\t\trow={ri}\r\n\t\t\t\t\t\t\t\t\t\tcol={ci}\r\n\t\t\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\t\t\tkey={`row${ri}-col${ci}`}\r\n\t\t\t\t\t\t\t\t\t\timage={image}\r\n\t\t\t\t\t\t\t\t\t\tshowMoves={showMoves}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CheckersScreen;\r\n",["134","135"],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Cell.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\Piece.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\checkers\\checkersLogic.js",["136","137","138","139","140","141"],"import CheckersPiece from \"./Piece\";\r\n\r\nconst get_all_valid_moves = (board, color) => {\r\n\tlet all_moves_for_a_color = {};\r\n\r\n\tfor (let i = 0; i < board.length; i++) {\r\n\t\tfor (let j = 0; j < board.length; j++) {\r\n\t\t\tif (board[i][j] !== 0 && board[i][j].color === color) {\r\n\t\t\t\tall_moves_for_a_color[`(${i},${j})`] = board[i][j].get_valid_moves();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst move_piece = (board, cells_clicked) => {\r\n\t// row[0], col[0] is the initial position\r\n\t// row[1], col[1] is the final position\r\n\r\n\tconst rowi = cells_clicked[\"rows\"][0];\r\n\tconst rowf = cells_clicked[\"rows\"][1];\r\n\tconst coli = cells_clicked[\"cols\"][0];\r\n\tconst colf = cells_clicked[\"cols\"][1];\r\n\r\n\tlet did_piece_move = false;\r\n\tlet was_piece_captured = false;\r\n\tlet was_promoted_to_king = false;\r\n\tlet piece_captured_row, piece_captured_col;\r\n\tconst clicked_piece = board[rowi][coli];\r\n\r\n\t// # all_moves is now a dictionary\r\n\tconsole.log(clicked_piece);\r\n\tconst all_moves = get_all_valid_moves(board, clicked_piece.color);\r\n\r\n\t// # not a capturing move\r\n\tif (rowi - 1 <= rowf <= rowi + 1) {\r\n\t\tlet temp = board[rowi][coli];\r\n\t\tboard[rowi][coli] = board[rowf][colf];\r\n\t\tboard[rowf][colf] = temp;\r\n\r\n\t\tboard[rowf][colf].current_row = rowf;\r\n\t\tboard[rowf][colf].current_col = colf;\r\n\t\tdid_piece_move = true;\r\n\t} else if (rowi - 2 <= rowf <= rowi + 2) {\r\n\t\tlet temp = board[rowi][coli];\r\n\t\tboard[rowi][coli] = board[rowf][colf];\r\n\t\tboard[rowf][colf] = temp;\r\n\t\tboard[rowf][colf].current_row = rowf;\r\n\t\tboard[rowf][colf].current_col = colf;\r\n\r\n\t\tif (rowf < rowi) {\r\n\t\t\tpiece_captured_row = rowi - 1;\r\n\t\t\tpiece_captured_col = colf < coli ? coli - 1 : coli + 1;\r\n\t\t} else {\r\n\t\t\tpiece_captured_row = rowi + 1;\r\n\t\t\tpiece_captured_col = colf < coli ? coli - 1 : coli + 1;\r\n\t\t}\r\n\r\n\t\t// was_piece_captured, which piece was captured (red or black)\r\n\t\twas_piece_captured = [true, board[piece_captured_row][piece_captured_col]];\r\n\r\n\t\tif (board[piece_captured_row][piece_captured_col].isKing) {\r\n\t\t\tboard[rowf][colf].isKing = true;\r\n\t\t}\r\n\r\n\t\tboard[piece_captured_row][piece_captured_col] = 0;\r\n\t\tdid_piece_move = true;\r\n\t}\r\n\tif (did_piece_move) {\r\n\t\tif (board[rowf][colf].row < 2 && rowf == 7 && !board[rowf][colf].isKing) {\r\n\t\t\tboard[rowf][colf].isKing = true;\r\n\t\t\twas_promoted_to_king = [true, board[rowf][colf]];\r\n\t\t}\r\n\r\n\t\tif (board[rowf][colf].row > 2 && rowf == 0 && !board[rowf][colf].isKing) {\r\n\t\t\tboard[rowf][colf].isKing = true;\r\n\t\t\twas_promoted_to_king = [true, board[rowf][colf]];\r\n\t\t}\r\n\t}\r\n\r\n\t// return did_piece_move, clicked_piece, was_piece_captured, was_promoted_to_king;\r\n\tconsole.log(board);\r\n\treturn board;\r\n};\r\n\r\nexport default move_piece;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Pawn.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Knight.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Rook.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Bishop.js",["142","143"],"import Piece from \"./ChessPiece\";\r\n\r\nclass Bishop extends Piece {\r\n\tconstructor(color, row, col) {\r\n\t\tsuper(color, row, col);\r\n\t\tthis.image = `images/chess/${this.color}Bishop.png`;\r\n\t}\r\n\r\n\tupperRight = board => {\r\n\t\tlet c = this.col;\r\n\t\tfor (let r = this.row - 1; r >= 0; r--) {\r\n\t\t\tif (c === 7) break;\r\n\t\t\telse c++;\r\n\r\n\t\t\tif (board[r][c] !== 0) {\r\n\t\t\t\tif (board[r][c].color === this.color) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"capturing\";\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"valid\";\r\n\t\t}\r\n\t};\r\n\r\n\tlowerRight = board => {\r\n\t\tlet c = this.col;\r\n\t\tfor (let r = this.row + 1; r < 8; r++) {\r\n\t\t\tif (c === 7) break;\r\n\t\t\telse c++;\r\n\r\n\t\t\tif (board[r][c] !== 0) {\r\n\t\t\t\tif (board[r][c].color === this.color) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"capturing\";\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"valid\";\r\n\t\t}\r\n\t};\r\n\r\n\tupperLeft = board => {\r\n\t\tlet c = this.col;\r\n\t\tfor (let r = this.row - 1; r >= 0; r--) {\r\n\t\t\tif (c === 0) break;\r\n\t\t\telse c--;\r\n\r\n\t\t\tif (board[r][c] !== 0) {\r\n\t\t\t\tif (board[r][c].color === this.color) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"capturing\";\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"valid\";\r\n\t\t}\r\n\t};\r\n\r\n\tlowerLeft = board => {\r\n\t\tlet c = this.col;\r\n\t\tfor (let r = this.row + 1; r < 8; r++) {\r\n\t\t\tif (c === 0) break;\r\n\t\t\telse c--;\r\n\r\n\t\t\tif (board[r][c] !== 0) {\r\n\t\t\t\tif (board[r][c].color === this.color) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"capturing\";\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.moves[String(r) + \",\" + String(c)] = \"valid\";\r\n\t\t}\r\n\t};\r\n\r\n\thandleKingInCheck = (board, kingParameters) => {\r\n\t\t// the king of the same color is in check\r\n\t\tlet { kingPos, pieceCheckingKing } = kingParameters;\r\n\t};\r\n\r\n\tvalidMoves = (board, kingParameters) => {\r\n\t\tthis.resetMoves();\r\n\r\n\t\tthis.upperRight(board);\r\n\t\tthis.lowerRight(board);\r\n\t\tthis.upperLeft(board);\r\n\t\tthis.lowerLeft(board);\r\n\r\n\t\tlet { whiteKingInCheck, blackKingInCheck } = kingParameters;\r\n\r\n\t\tif (this.color === \"white\" && whiteKingInCheck) {\r\n\t\t\tlet { whiteKingPos, pieceCheckingWhiteKing } = kingParameters;\r\n\t\t\tthis.handleKingInCheck(board, {\r\n\t\t\t\tkingPos: whiteKingPos,\r\n\t\t\t\tpieceCheckingKing: pieceCheckingWhiteKing\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.color === \"black\" && blackKingInCheck) {\r\n\t\t\tlet { blackKingPos, pieceCheckingBlackKing } = kingParameters;\r\n\t\t\tthis.handleKingInCheck(board, {\r\n\t\t\t\tkingPos: blackKingPos,\r\n\t\t\t\tpieceCheckingKing: pieceCheckingBlackKing\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.moves;\r\n\t};\r\n\r\n\tdisplay() {\r\n\t\treturn this.color[0].toUpperCase() + \"B\";\r\n\t}\r\n}\r\n\r\nexport default Bishop;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\King.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\Queen.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessPiece.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\chess\\ChessGame.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\ChessBoard.js",["144"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Cell from \"./Cell\";\r\nimport Pawn from \"../classes/chess/Pawn\";\r\nimport Rook from \"../classes/chess/Rook\";\r\nimport Knight from \"../classes/chess/Knight\";\r\nimport Bishop from \"../classes/chess/Bishop\";\r\nimport King from \"../classes/chess/King\";\r\nimport Queen from \"../classes/chess/Queen\";\r\nimport ChessGame from \"../classes/chess/ChessGame\";\r\n\r\nconst game = new ChessGame();\r\n\r\nconst ChessBoard = () => {\r\n\tconst [board, setBoard] = useState([\r\n\t\t[\r\n\t\t\tnew Rook(\"black\", 0, 0),\r\n\t\t\tnew Knight(\"black\", 0, 1),\r\n\t\t\tnew Bishop(\"black\", 0, 2),\r\n\t\t\tnew King(\"black\", 0, 3),\r\n\t\t\tnew Queen(\"black\", 0, 4),\r\n\t\t\tnew Bishop(\"black\", 0, 5),\r\n\t\t\tnew Knight(\"black\", 0, 6),\r\n\t\t\tnew Rook(\"black\", 0, 7)\r\n\t\t],\r\n\t\t[\r\n\t\t\tnew Pawn(\"black\", 1, 0),\r\n\t\t\tnew Pawn(\"black\", 1, 1),\r\n\t\t\tnew Pawn(\"black\", 1, 2),\r\n\t\t\tnew Pawn(\"black\", 1, 3),\r\n\t\t\tnew Pawn(\"black\", 1, 4),\r\n\t\t\tnew Pawn(\"black\", 1, 5),\r\n\t\t\tnew Pawn(\"black\", 1, 6),\r\n\t\t\tnew Pawn(\"black\", 1, 7)\r\n\t\t],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 0, 0, 0],\r\n\t\t[\r\n\t\t\tnew Pawn(\"white\", 6, 0),\r\n\t\t\tnew Pawn(\"white\", 6, 1),\r\n\t\t\tnew Pawn(\"white\", 6, 2),\r\n\t\t\tnew Pawn(\"white\", 6, 3),\r\n\t\t\tnew Pawn(\"white\", 6, 4),\r\n\t\t\tnew Pawn(\"white\", 6, 5),\r\n\t\t\tnew Pawn(\"white\", 6, 6),\r\n\t\t\tnew Pawn(\"white\", 6, 7)\r\n\t\t],\r\n\t\t[\r\n\t\t\tnew Rook(\"white\", 7, 0),\r\n\t\t\tnew Knight(\"white\", 7, 1),\r\n\t\t\tnew Bishop(\"white\", 7, 2),\r\n\t\t\tnew King(\"white\", 7, 3),\r\n\t\t\tnew Queen(\"white\", 7, 4),\r\n\t\t\tnew Bishop(\"white\", 7, 5),\r\n\t\t\tnew Knight(\"white\", 7, 6),\r\n\t\t\tnew Rook(\"white\", 7, 7)\r\n\t\t]\r\n\t]);\r\n\r\n\tconst { socket } = useSelector(state => state.socket);\r\n\tconst { chessPieceColor } = useSelector(state => state.user);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on(\"opponentPlayedAMove\", ({ cellsClicked }) => {\r\n\t\t\tlet tempBoard = board.map(b => b);\r\n\t\t\tgame.movePiece(tempBoard, cellsClicked);\r\n\t\t\tsetBoard(tempBoard);\r\n\t\t});\r\n\t}, [socket]);\r\n\r\n\tconst showMoves = (row, col) => {\r\n\t\tlet tempBoard = board.map(b => b);\r\n\t\tlet tempCellsClicked = game.showValidMoves(chessPieceColor, tempBoard, row, col);\r\n\r\n\t\t// console.log(tempCellsClicked);\r\n\t\tsetBoard(tempBoard);\r\n\r\n\t\t// only return when len(tempCellsClicked.rows === 2) as we don't want to\r\n\t\t// show the opponent's moves to the player\r\n\t\tif (tempCellsClicked && false) {\r\n\t\t\t// cancelling for now\r\n\t\t\tif (tempCellsClicked.rows.length === 2) {\r\n\t\t\t\tsocket.emit(\"movePlayed\", { cellsClicked: tempCellsClicked });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst showChessBoard = () => {\r\n\t\treturn board.map((row, ri) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ margin: 0, padding: 0, display: \"flex\" }} key={`row${ri}`}>\r\n\t\t\t\t\t{row.map((col, ci) => {\r\n\t\t\t\t\t\tlet color =\r\n\t\t\t\t\t\t\t(ri + ci) % 2 === 0 ? \"rgb(195,105,56)\" : \"rgb(239, 206,163)\";\r\n\r\n\t\t\t\t\t\tlet piece = board[ri][ci];\r\n\t\t\t\t\t\tlet blueDot, redDot, isClicked;\r\n\r\n\t\t\t\t\t\tif (piece === \"dot\") {\r\n\t\t\t\t\t\t\tblueDot = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (piece !== 0) {\r\n\t\t\t\t\t\t\tif (piece.isBeingAttacked) {\r\n\t\t\t\t\t\t\t\tredDot = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (piece.isClicked) {\r\n\t\t\t\t\t\t\t\tisClicked = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\t\tblueDot={blueDot}\r\n\t\t\t\t\t\t\t\tredDot={redDot}\r\n\t\t\t\t\t\t\t\tisClicked={isClicked}\r\n\t\t\t\t\t\t\t\trow={ri}\r\n\t\t\t\t\t\t\t\tcol={ci}\r\n\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\tkey={`row${ri}-col${ci}`}\r\n\t\t\t\t\t\t\t\timage={piece.image ? piece.image : false}\r\n\t\t\t\t\t\t\t\tshowMoves={showMoves}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tflexDirection: chessPieceColor === \"white\" ? \"column\" : \"column-reverse\"\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{showChessBoard(chessPieceColor)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChessBoard;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\ChessScreen.js",["145"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ChessBoard from \"../components/ChessBoard\";\r\nimport Chat from \"../components/Chat\";\r\n\r\nconst ChessScreen = ({ location }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { socket } = useSelector(state => state.socket);\r\n\r\n\tconst mainDivStyles = {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tminHeight: \"100vh\",\r\n\t\tminWidth: \"85vw\",\r\n\t\tflexWrap: \"wrap\"\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.title = \"Games.IO | Chess\";\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"chess screen use effect called\");\r\n\r\n\t\tsocket.emit(\"getChessPieceColor\");\r\n\r\n\t\tsocket.on(\"setChessPieceColor\", ({ chessPieceColor }) => {\r\n\t\t\t// do this somewhere else when you have more games\r\n\t\t\tconsole.log(\"chessPieceColor = \", chessPieceColor);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: \"SET_CHESS_PIECE_COLOR\",\r\n\t\t\t\tpayload: chessPieceColor\r\n\t\t\t});\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div style={mainDivStyles}>\r\n\t\t\t<ChessBoard />\r\n\t\t\t<Chat />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChessScreen;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Chat.js",["146"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"../styles/Chat.css\";\r\n\r\nconst Chat = () => {\r\n\t// react use effect has a call to setMessage, so I'm using setInputMessage\r\n\tconst [inputMessage, setInputMessage] = useState(\"\");\r\n\tconst [messageList, setMessageList] = useState([]);\r\n\r\n\tconst { socket } = useSelector(state => state.socket);\r\n\tconst { username } = useSelector(state => state.user);\r\n\r\n\tconst displayBotMessage = msg => {\r\n\t\tlet c;\r\n\t\tconst user = msg.split(\" \")[0];\r\n\r\n\t\tif (user === \"Currently\") {\r\n\t\t\tconst s = msg.split(\"\\n\");\r\n\t\t\tlet firstLine = s[0],\r\n\t\t\t\tsecondLine = s[1];\r\n\t\t\tc = \"#8e44ad\";\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<p style={{ color: c }}>\r\n\t\t\t\t\t{firstLine}\r\n\t\t\t\t\t<span style={{ fontWeight: \"bolder\", display: \"block\" }}>\r\n\t\t\t\t\t\t{secondLine}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</p>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tconst didLeave = msg.split(\" \")[2];\r\n\r\n\t\t\tif (didLeave === \"left\") {\r\n\t\t\t\tc = \"#e74c3c\";\r\n\t\t\t} else {\r\n\t\t\t\tc = \"#8e44ad\";\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<p style={{ color: c }}>\r\n\t\t\t\t\t<span style={{ fontWeight: \"bolder\" }}>{user} </span>\r\n\t\t\t\t\t{msg.split(\" \").slice(1, msg.split(\" \").length).join(\" \")}\r\n\t\t\t\t</p>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst sendMessage = e => {\r\n\t\te.preventDefault();\r\n\t\tsocket.emit(\"newMessage\", { inputMessage });\r\n\t\tsetMessageList([\r\n\t\t\t...messageList,\r\n\t\t\t{ username: \"You\", newMessage: inputMessage, color: \"black\" }\r\n\t\t]);\r\n\t\tsetInputMessage(\"\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// to receive the bot message that state how many users are currently in the chat\r\n\t\tsocket.emit(\"newUserJoinsChat\", { username });\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on(\"newMessageReceived\", data => {\r\n\t\t\tlet { newMessage, username, color } = data;\r\n\t\t\tsetMessageList([...messageList, { username, newMessage, color }]);\r\n\t\t});\r\n\t}, [messageList, socket]);\r\n\r\n\treturn (\r\n\t\t<div id=\"chat-form-container\">\r\n\t\t\t<div id=\"chat-container\">\r\n\t\t\t\t{messageList.map((m, i) => (\r\n\t\t\t\t\t<div key={i} className=\"message\">\r\n\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\tclassName=\"username\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: m.color\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{m.username}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t{m.username === \"Bot\" ? (\r\n\t\t\t\t\t\t\tdisplayBotMessage(m.newMessage)\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p>{m.newMessage}</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<form onSubmit={sendMessage}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Type your message\"\r\n\t\t\t\t\tvalue={inputMessage}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tsetInputMessage(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chat;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\store.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\reducers\\userReducers.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\reducers\\socketReducers.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\GamesScreen.js",["147"],"import React from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst GamesScreen = ({ history }) => {\r\n\tconst s = { margin: \"1rem\" };\r\n\r\n\tconst initSocket = _room => {\r\n\t\tlet room = `${_room}_${uuid()}`;\r\n\t\thistory.push(`/inviteplayers/${room}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={s} onClick={() => initSocket(\"chess\")}>\r\n\t\t\t\tChess\r\n\t\t\t</div>\r\n\t\t\t<div style={s} onClick={() => initSocket(\"checkers\")}>\r\n\t\t\t\tCheckers\r\n\t\t\t</div>\r\n\t\t\t<div style={s} onClick={() => initSocket(\"sketchio\")}>\r\n\t\t\t\tSketchIO\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GamesScreen;\r\n","D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\SketchIOScreen.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\Canvas.js",["148"],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\classes\\sketch\\SketchIO.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\screens\\InvitePlayersScreen.js",["149"],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\DisplayRoomId.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\components\\DisplayPlayersInRoom.js",[],"D:\\JavaScript\\multiplayer_games\\frontend\\src\\hooks\\useWindowSize.js",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":46,"column":5,"nodeType":"156","endLine":46,"endColumn":7,"suggestions":"157"},{"ruleId":"150","replacedBy":"158"},{"ruleId":"152","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":21},{"ruleId":"160","severity":1,"message":"164","line":32,"column":8,"nodeType":"162","messageId":"163","endLine":32,"endColumn":17},{"ruleId":"160","severity":1,"message":"165","line":59,"column":3,"nodeType":"162","messageId":"163","endLine":59,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":69,"column":41,"nodeType":"168","messageId":"169","endLine":69,"endColumn":43},{"ruleId":"166","severity":1,"message":"167","line":74,"column":41,"nodeType":"168","messageId":"169","endLine":74,"endColumn":43},{"ruleId":"160","severity":1,"message":"170","line":76,"column":4,"nodeType":"162","messageId":"163","endLine":76,"endColumn":24},{"ruleId":"160","severity":1,"message":"171","line":87,"column":9,"nodeType":"162","messageId":"163","endLine":87,"endColumn":16},{"ruleId":"160","severity":1,"message":"172","line":87,"column":18,"nodeType":"162","messageId":"163","endLine":87,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":72,"column":5,"nodeType":"156","endLine":72,"endColumn":13,"suggestions":"173"},{"ruleId":"154","severity":1,"message":"174","line":37,"column":5,"nodeType":"156","endLine":37,"endColumn":7,"suggestions":"175"},{"ruleId":"154","severity":1,"message":"176","line":63,"column":5,"nodeType":"156","endLine":63,"endColumn":7,"suggestions":"177"},{"ruleId":"160","severity":1,"message":"178","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":12},{"ruleId":"154","severity":1,"message":"179","line":33,"column":8,"nodeType":"180","endLine":48,"endColumn":3},{"ruleId":"160","severity":1,"message":"181","line":1,"column":28,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'board'. Either include it or remove the dependency array.","ArrayExpression",["184"],["182"],["183"],"no-unused-vars","'CheckersPiece' is defined but never used.","Identifier","unusedVar","'all_moves' is assigned a value but never used.","'was_piece_captured' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'was_promoted_to_king' is assigned a value but never used.","'kingPos' is assigned a value but never used.","'pieceCheckingKing' is assigned a value but never used.",["185"],"React Hook useEffect has missing dependencies: 'dispatch' and 'socket'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'socket' and 'username'. Either include them or remove the dependency array.",["187"],"'io' is defined but never used.","The 'addPainterToPointsList' function makes the dependencies of useEffect Hook (at line 124) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'addPainterToPointsList' in its own useCallback() Hook.","VariableDeclarator","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [board]",{"range":"196","text":"197"},"Update the dependencies array to be: [board, socket]",{"range":"198","text":"199"},"Update the dependencies array to be: [dispatch, socket]",{"range":"200","text":"201"},"Update the dependencies array to be: [socket, username]",{"range":"202","text":"203"},[1321,1323],"[board]",[1982,1990],"[board, socket]",[958,960],"[dispatch, socket]",[1597,1599],"[socket, username]"]